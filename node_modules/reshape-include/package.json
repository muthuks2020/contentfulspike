{
  "_args": [
    [
      {
        "raw": "reshape-include@^1.0.0",
        "scope": null,
        "escapedName": "reshape-include",
        "name": "reshape-include",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/muthu/try/spiket/node_modules/reshape-loader"
    ]
  ],
  "_from": "reshape-include@>=1.0.0 <2.0.0",
  "_id": "reshape-include@1.0.0",
  "_inCache": true,
  "_location": "/reshape-include",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/reshape-include-1.0.0.tgz_1491427194829_0.5173250832594931"
  },
  "_npmUser": {
    "name": "jescalan",
    "email": "npm.je@mailhero.io"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reshape-include@^1.0.0",
    "scope": null,
    "escapedName": "reshape-include",
    "name": "reshape-include",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/reshape-loader"
  ],
  "_resolved": "https://registry.npmjs.org/reshape-include/-/reshape-include-1.0.0.tgz",
  "_shasum": "2f75e57e016447c633f48cbb0e2a5ca114275d10",
  "_shrinkwrap": null,
  "_spec": "reshape-include@^1.0.0",
  "_where": "/home/muthu/try/spiket/node_modules/reshape-loader",
  "author": {
    "name": "Jeff Escalante"
  },
  "ava": {
    "verbose": "true"
  },
  "bugs": {
    "url": "https://github.com/reshape/include/issues"
  },
  "dependencies": {
    "reshape-plugin-util": "^0.2.0"
  },
  "description": "include partials into your reshape templates",
  "devDependencies": {
    "ava": "^0.19.0",
    "coveralls": "^2.11.12",
    "nyc": "^10.0.0",
    "reshape": "^0.4.0",
    "snazzy": "^6.0.0",
    "standard": "^10.0.0",
    "sugarml": "^0.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2f75e57e016447c633f48cbb0e2a5ca114275d10",
    "tarball": "https://registry.npmjs.org/reshape-include/-/reshape-include-1.0.0.tgz"
  },
  "gitHead": "3bf4c4a2826a83bf5e2807fb32a3f363af6e99be",
  "homepage": "https://github.com/reshape/include#readme",
  "keywords": [
    "html",
    "include",
    "reshape-plugin",
    "transform"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "jescalan",
      "email": "npm.je@mailhero.io"
    }
  ],
  "name": "reshape-include",
  "optionalDependencies": {},
  "readme": "# Reshape Include\n\n[![npm](https://img.shields.io/npm/v/reshape-include.svg?style=flat-square)](https://npmjs.com/package/reshape-include)\n[![tests](https://img.shields.io/travis/reshape/include.svg?style=flat-square)](https://travis-ci.org/reshape/include?branch=master)\n[![dependencies](https://img.shields.io/david/reshape/include.svg?style=flat-square)](https://david-dm.org/reshape/include)\n[![coverage](https://img.shields.io/coveralls/reshape/include.svg?style=flat-square)](https://coveralls.io/r/reshape/include?branch=master)\n\nInclude other HTML files (\"partials\") into your HTML.\n\n### Install\n\n```sh\nnpm i reshape-include --save\n```\n\n### Usage\n\nGiven the following input files:\n\n```html\n<!-- index.html -->\n<p>Here's my partial:</p>\n<include src='_partial.html'></include>\n<p>after the partial</p>\n```\n\n```html\n<!-- _partial.html -->\n<strong>hello from the partial!</strong>\n```\n\nProcess them with reshape:\n\n```js\nconst {readFileSync} = require('fs')\nconst reshape = require('reshape')\nconst include = require('reshape-include')\n\nconst html = readFileSync('index.html')\n\nreshape({ plugins: include() })\n  .process(html)\n  .then((result) => console.log(result.output()))\n```\n\nOutput:\n\n```html\n<p>Here's my partial:</p>\n<strong>hello from the partial!</strong>\n<p>after the partial</p>\n```\n\n### Utilizing Different Parsers\n\nSometimes, you might want to import a `html` file into a `sgr` file. Or maybe a `svg`. In these cases and any other where you are seeking to mix two files that are processed by different parsers, you can utilize the  `parserRules` config value. Example shown below:\n\n```js\nconst htmlParser = require('reshape-parser')\nconst sugarml = require('sugarml')\n\nreshape({\n  plugins: [\n    include({\n      parserRules: [\n        { test: /\\.sgr$/, parser: sugarml }\n        { test: /\\.html$/, parser: htmlParser }\n      ]\n    })\n  ]\n})\n```\n\nNote that anything not matched by a `parserRules` test will be parsed by whatever parser is being used by reshape from its primary config. So in the example above, the `html` test is unnecessary -- since reshape's default parser is `reshape-parser`, it will already use this for any file not matching `.sgr`.\n\nNote that *any* parser can be used here in theory, but it must output a valid [Reshape AST](https://github.com/reshape/reshape#reshape-ast). Feel free to make use of the [reshape AST validator](https://github.com/reshape/plugin-util#validatetreetree) if you want in the process.\n\n### Options\n\nAll options are optional, none are required.\n\n| Name | Description | Default |\n| ---- | ----------- | ------- |\n| **root** | Root path to resolve the include from | the file's path. |\n| **alias**| Object with alias mappings, each key is your reference and the corresponding value is the relative path to your file. { button: './views/button.html } | |\n| **parserRules**| Array of objects that can include the `test` (regex) and `parser` (fn) keys. See readme for further details | |\n\n### Reporting Dependencies\n\nThis plugin will report its dependencies in the standard format as dictated by [reshape-loader](https://github.com/reshape/loader) if you pass `dependencies: []` as an option to reshape when it runs. Dependencies will be available on the output object under the `dependencies` key. For example:\n\n```js\nconst reshape = require('reshape')\nconst include = require('reshape-include')\n\nreshape({ plugins: [include()], dependencies: []})\n  .process(someHtml)\n  .then((res) => {\n    console.log(res.dependencies)\n    console.log(res.output())\n  })\n```\n\nIf you are using this with webpack, reshape-loader takes care of the dependency reporting and you don't have to do anything üòÅ\n\n### License\n\n- Licensed under [MIT](LICENSE.md)\n- See our [contributing guide](contributing.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reshape/include.git"
  },
  "scripts": {
    "coverage": "nyc ava && nyc report --reporter=html",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "lint": "standard | snazzy",
    "test": "npm run lint && ava"
  },
  "version": "1.0.0"
}
