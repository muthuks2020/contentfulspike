{
  "_args": [
    [
      {
        "raw": "reshape-layouts@^1.0.0",
        "scope": null,
        "escapedName": "reshape-layouts",
        "name": "reshape-layouts",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/muthu/try/spiket/node_modules/reshape-standard"
    ]
  ],
  "_from": "reshape-layouts@>=1.0.0 <2.0.0",
  "_id": "reshape-layouts@1.0.0",
  "_inCache": true,
  "_location": "/reshape-layouts",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/reshape-layouts-1.0.0.tgz_1491423657659_0.37820861232466996"
  },
  "_npmUser": {
    "name": "jescalan",
    "email": "npm.je@mailhero.io"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reshape-layouts@^1.0.0",
    "scope": null,
    "escapedName": "reshape-layouts",
    "name": "reshape-layouts",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/reshape-standard"
  ],
  "_resolved": "https://registry.npmjs.org/reshape-layouts/-/reshape-layouts-1.0.0.tgz",
  "_shasum": "d6eff8a35a54ea9380a829e32525c9c4b9fb2a59",
  "_shrinkwrap": null,
  "_spec": "reshape-layouts@^1.0.0",
  "_where": "/home/muthu/try/spiket/node_modules/reshape-standard",
  "author": {
    "name": "Jeff Escalante"
  },
  "ava": {
    "verbose": "true",
    "serial": "true"
  },
  "bugs": {
    "url": "https://github.com/reshape/layouts/issues"
  },
  "dependencies": {},
  "description": "flexible layouts using 'extend' and 'block' tags",
  "devDependencies": {
    "ava": "^0.19.0",
    "coveralls": "^2.11.12",
    "nyc": "^10.0.0",
    "proxyquire": "^1.7.10",
    "reshape": "^0.4.0",
    "snazzy": "^6.0.0",
    "standard": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d6eff8a35a54ea9380a829e32525c9c4b9fb2a59",
    "tarball": "https://registry.npmjs.org/reshape-layouts/-/reshape-layouts-1.0.0.tgz"
  },
  "gitHead": "ca70cdeadeda9ae4e5133dec22a32d55eed99331",
  "homepage": "https://github.com/reshape/layouts",
  "keywords": [
    "extend",
    "html",
    "jade",
    "reshape-plugin",
    "template"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "jescalan",
      "email": "npm.je@mailhero.io"
    }
  ],
  "name": "reshape-layouts",
  "optionalDependencies": {},
  "readme": "# Reshape Layouts\n\n[![npm](https://img.shields.io/npm/v/reshape-layouts.svg?style=flat-square)](https://npmjs.com/package/reshape-layouts)\n[![tests](https://img.shields.io/travis/reshape/layouts.svg?style=flat-square)](https://travis-ci.org/reshape/layouts?branch=master)\n[![dependencies](https://img.shields.io/david/reshape/layouts.svg?style=flat-square)](https://david-dm.org/reshape/layouts)\n[![coverage](https://img.shields.io/coveralls/reshape/layouts.svg?style=flat-square)](https://coveralls.io/r/reshape/layouts?branch=master)\n\nLayout inheritance using `block` and `extend`, inspired by ([jade/pug](http://jade-lang.com/reference/inheritance/)).\n\n### Installation\n\n`npm i reshape-layouts --save`\n\n### Usage\n\nLet's say we have a base template:\n\n`base.html`\n```html\n<html>\n    <head>\n        <block name='title'>\n          <title>Default Title</title>\n        </block>\n    </head>\n\n    <body>\n        <div class=\"content\">\n           <block name=\"content\"></block>\n        </div>\n        <footer>\n            <block name=\"footer\">footer content</block>\n        </footer>\n    </body>\n</html>\n```\n\nNow we can inherit this template. All defined blocks inside `<extends>` will\nreplace the blocks with the same name in the parent template. If the block is not defined inside `<extends>` its content in the parent template remains the same.\n\nIn the example the blocks `title` and `content` will be replaced and\nthe block `footer` will remain unchanged:\n\n```js\nconst reshape = require('reshape')\nconst layouts = require('reshape-layouts')\n\nconst html = '<extends src=\"base.html\">' +\n               '<block name=\"title\"><title>How to use reshape-layouts</title></block>' +\n               '<block name=\"content\">Read the documentation</block>'\n             '</extends>'\n\nreshape({\n  plugins: layouts({\n    encoding: 'utf8', // Parent template encoding (default: 'utf8')\n    root: './' // Path to parent template directory (default: './')\n  })\n}).process(html)\n  .then((res) => res.output())\n```\n\nThe final HTML will be:\n\n```html\n<html>\n  <head>\n    <title>How to use reshape-layouts</title>\n  </head>\n\n  <body>\n    <div class=\"content\">Read the documentation</div>\n    <footer>footer content</footer>\n  </body>\n</html>\n```\n\n#### Append & Prepend\n\nIt's also possible to append and prepend block's content\n\n```js\nconst reshape = require('reshape')\nconst layouts = require('reshape-layouts')\n\nconst html = '<extends src=\"base.html\">' +\n               '<block name=\"title\" type=\"prepend\">How to use reshape-layouts</block>' +\n               '<block name=\"content\">Read the documentation</block>' +\n               '<block name=\"footer\" type=\"append\">‚Äî 2016</block>'\n           '</extends>'\n\nreshape({ plugins: layouts() })\n  .process(html)\n  .then((res) => res.output())\n```\n\nThe final HTML will be:\n\n```html\n<html>\n  <head>\n    <title>How to use reshape-layouts ‚Äî Github</title>\n  </head>\n  <body>\n    <div class=\"content\">Read the documentation</div>\n    <footer>footer content ‚Äî¬†2016</footer>\n  </body>\n</html>\n```\n\n### Caveats\n\nThere are a number of tags that have their contents parsed as plaintext and cannot contain nested html tags. If you place a `block` tag inside any of these elements, it will not behave as expected, and instead will be rendered as plaintext. These are the tags that are content-only: `title`, `noscript`, `noframes`, `style`, `script`, `xmp`, `iframe`, `noembed`.\n\n### Options\n\nAll options are optional, none are required.\n\n| Name | Description | Default |\n| ---- | ----------- | ------- |\n| **root** | root to resolve layout paths from | reshape `filename` option |\n| **encoding** | encoding with which to read layout files | `utf8` |\n\n### Reporting Dependencies\n\nThis plugin will report its dependencies in the standard format as dictated by [reshape-loader](https://github.com/reshape/loader) if you pass `dependencies: []` as an option to reshape when it runs. Dependencies will be available on the output object under the `dependencies` key. For example:\n\n```js\nconst reshape = require('reshape')\nconst include = require('reshape-layouts')\n\nreshape({ plugins: [layouts()], dependencies: []})\n  .process(someHtml)\n  .then((res) => {\n    console.log(res.dependencies)\n    console.log(res.output())\n  })\n```\n\nIf you are using this with webpack, reshape-loader takes care of the dependency reporting and you don't have to do anything üòÅ\n\n### License & Contributing\n\n- Licensed under [MIT](LICENSE.txt)\n- See the [contributing guide](contributing.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/reshape/layouts.git"
  },
  "scripts": {
    "coverage": "nyc ava && nyc report --reporter=html && open ./coverage/index.html",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard | snazzy",
    "test": "nyc ava"
  },
  "version": "1.0.0"
}
