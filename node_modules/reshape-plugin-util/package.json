{
  "_args": [
    [
      {
        "raw": "reshape-plugin-util@^0.2.0",
        "scope": null,
        "escapedName": "reshape-plugin-util",
        "name": "reshape-plugin-util",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/home/muthu/try/spiket/node_modules/reshape-include"
    ]
  ],
  "_from": "reshape-plugin-util@>=0.2.0 <0.3.0",
  "_id": "reshape-plugin-util@0.2.1",
  "_inCache": true,
  "_location": "/reshape-plugin-util",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/reshape-plugin-util-0.2.1.tgz_1471620957944_0.16053132619708776"
  },
  "_npmUser": {
    "name": "jescalan",
    "email": "npm.je@mailhero.io"
  },
  "_npmVersion": "3.8.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reshape-plugin-util@^0.2.0",
    "scope": null,
    "escapedName": "reshape-plugin-util",
    "name": "reshape-plugin-util",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/reshape-include"
  ],
  "_resolved": "https://registry.npmjs.org/reshape-plugin-util/-/reshape-plugin-util-0.2.1.tgz",
  "_shasum": "29358959d58c9eebca25c35efe0cc627817cf092",
  "_shrinkwrap": null,
  "_spec": "reshape-plugin-util@^0.2.0",
  "_where": "/home/muthu/try/spiket/node_modules/reshape-include",
  "author": {
    "name": "Jeff Escalante"
  },
  "ava": {
    "verbose": "true"
  },
  "bugs": {
    "url": "https://github.com/reshape/plugin-util/issues"
  },
  "dependencies": {
    "when": "^3.7.7"
  },
  "description": "utilities for reshape plugins",
  "devDependencies": {
    "ava": "^0.16.0",
    "coveralls": "2.x",
    "nyc": "^8.1.0",
    "reshape": "0.2.0",
    "snazzy": "^4.0.1",
    "standard": "7.x"
  },
  "directories": {},
  "dist": {
    "shasum": "29358959d58c9eebca25c35efe0cc627817cf092",
    "tarball": "https://registry.npmjs.org/reshape-plugin-util/-/reshape-plugin-util-0.2.1.tgz"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "gitHead": "a4d5938f08398531686e66637607ddb558f745ba",
  "homepage": "https://github.com/reshape/plugin-util",
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "jescalan",
      "email": "npm.je@mailhero.io"
    }
  ],
  "name": "reshape-plugin-util",
  "optionalDependencies": {},
  "readme": "# Reshape Plugin Util\n\n[![npm](https://img.shields.io/npm/v/reshape-plugin-util.svg?style=flat-square)](https://npmjs.com/package/reshape-plugin-util)\n[![tests](https://img.shields.io/travis/reshape/plugin-util.svg?style=flat-square)](https://travis-ci.org/reshape/plugin-util?branch=master)\n[![dependencies](https://img.shields.io/david/reshape/plugin-util.svg?style=flat-square)](https://david-dm.org/reshape/plugin-util)\n[![coverage](https://img.shields.io/coveralls/reshape/plugin-util.svg?style=flat-square)](https://coveralls.io/r/reshape/plugin-util?branch=master)\n\nA little set of utilities for reshape plugins\n\n> **Note:** This project is in early development, and versioning is a little different. [Read this](http://markup.im/#q4_cRZ1Q) for more details.\n\n### Installation\n\n`npm i reshape-plugin-util --save`\n\n> **Note:** This project is compatible with node v6+ only\n\n### Usage\n\nThis is just a small utility that contains a couple a useful functions when developing reshape plugins.\n\n#### `modifyNodes(tree, match, transform)`\n\nGiven a reshape AST, a function that will return any node that matches given criteria, and a function that receives matched nodes and returns one or more modified nodes, returns a modified AST.\n\nExample: Using `modifyNodes` to modify a node's content\n\n```js\nconst util = require('reshape-plugin-util')\n\nmodule.exports = function yellPlugin (tree) {\n  return util.modifyNodes(tree, (node) => node.name === 'p', (node) => {\n    node.content = node.content.map((n) => n.content.toUpperCase())\n    return node\n  })\n}\n```\n\nInput:\n\n```html\n<p>hello world!</p>\n```\n\nOutput:\n\n```html\n<p>HELLO WORLD!</p>\n```\n\nExample: Using `modifyNodes` to remove a node\n\n```js\nconst util = require('reshape-plugin-util')\n\nmodule.exports = function removeNodePlugin (tree) {\n  return util.modifyNodes(tree, (node) => node.name === 'remove', (node) => {\n    return null\n  })\n}\n```\n\nInput:\n\n```html\n<p>before</p>\n<remove>hello world!</remove>\n<p>after</p>\n```\n\nOutput:\n\n```html\n<p>before</p>\n<p>after</p>\n```\n\nExample: Using `modifyNodes` to add extra nodes\n\n```js\nconst util = require('reshape-plugin-util')\n\nmodule.exports = function echoPlugin (tree) {\n  return util.modifyNodes(tree, (node) => node.name === 'echo', (node) => {\n    if (!node.attrs) node.attrs = {}\n    if (!node.attrs.class) node.attrs.class = []\n    node.attrs.class.push('echo')\n    node.name = 'div'\n    return [node, node]\n  })\n}\n```\n\nInput:\n\n```html\n<p>before</p>\n<echo>echo</echo>\n<p>after</p>\n```\n\nOutput:\n\n```html\n<p>before</p>\n<div class='echo'>echo</div>\n<div class='echo'>echo</div>\n<p>after</p>\n```\n\nYou can also return a promise from either function and it will work fine.\n\n#### `validateNode(node)`\n\nGiven a single reshape AST node, checks it for formatting errors. Example:\n\n```js\nconst util = require('reshape-plugin-util')\n\nutil.validateNode({\n  type: 'text',\n  content: ['foo', 'bar'],\n  location: { line: 1, col: 1 }\n})\n\n// => Error: text node content must be a string\n//    From: plugin-util\n//    Node: {\n//      type: 'text',\n//      content: ['foo', 'bar'],\n//      location: { line: 1, col: 1 }\n//    }\n```\n\n#### `validateTree(tree)`\n\nRecursively validates each node in a given reshape AST tree.\n\n```js\nconst util = require('reshape-plugin-util')\n\nutil.validateNode({\n  type: 'tag',\n  name: 'div'\n  content: [\n    {\n      content: 'foo',\n      location: { line: 1, col: 4 }\n    }\n  ],\n  location: { line: 1, col: 1 }\n})\n\n// => Error: node missing \"type\" attribute\n//    From: plugin-util\n//    Node: {\n//      content: 'foo',\n//      location: { line: 1, col: 4}\n//    }\n```\n\n### License & Contributing\n\n- Details on the license [can be found here](LICENSE.md)\n- Details on running tests and contributing [can be found here](contributing.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reshape/plugin-util.git"
  },
  "scripts": {
    "coverage": "nyc ava && nyc report --reporter=html && open ./coverage/index.html",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard | snazzy",
    "test": "nyc ava"
  },
  "version": "0.2.1"
}
