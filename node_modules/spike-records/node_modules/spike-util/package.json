{
  "_args": [
    [
      {
        "raw": "spike-util@^1.0.0",
        "scope": null,
        "escapedName": "spike-util",
        "name": "spike-util",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/muthu/try/spiket/node_modules/spike-records"
    ]
  ],
  "_from": "spike-util@>=1.0.0 <2.0.0",
  "_id": "spike-util@1.1.0",
  "_inCache": true,
  "_location": "/spike-records/spike-util",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/spike-util-1.1.0.tgz_1491862385473_0.6879486606922001"
  },
  "_npmUser": {
    "name": "jescalan",
    "email": "npm.je@mailhero.io"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "spike-util@^1.0.0",
    "scope": null,
    "escapedName": "spike-util",
    "name": "spike-util",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/spike-records"
  ],
  "_resolved": "https://registry.npmjs.org/spike-util/-/spike-util-1.1.0.tgz",
  "_shasum": "a94dee89d3ef4518483d86cfff11864013768e7c",
  "_shrinkwrap": null,
  "_spec": "spike-util@^1.0.0",
  "_where": "/home/muthu/try/spiket/node_modules/spike-records",
  "author": {
    "name": "Jeff Escalante"
  },
  "ava": {
    "verbose": "true",
    "files": [
      "test/*.js",
      "!test/plugin.js",
      "!test/loader.js"
    ]
  },
  "bugs": {
    "url": "https://github.com/static-dev/spike-utils/issues"
  },
  "dependencies": {
    "filewrap": "0.1.0",
    "glob": "^7.0.4",
    "micromatch": "^2.3.8",
    "when": "^3.7.7"
  },
  "description": "utilities for spike plugins",
  "devDependencies": {
    "ava": "^0.19.0",
    "coveralls": "^2.11.16",
    "nyc": "^10.1.2",
    "source-loader": "^0.2.0",
    "spike-core": "^1.0.0",
    "standard": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a94dee89d3ef4518483d86cfff11864013768e7c",
    "tarball": "https://registry.npmjs.org/spike-util/-/spike-util-1.1.0.tgz"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "gitHead": "076cc4e7c6118006a18b0d064a9acac34fa06a9c",
  "homepage": "https://github.com/static-dev/spike-utils",
  "keywords": [
    "spike",
    "utility"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "jescalan",
      "email": "npm.je@mailhero.io"
    }
  ],
  "name": "spike-util",
  "optionalDependencies": {},
  "readme": "# Spike Util\n\n[![npm](http://img.shields.io/npm/v/spike-util.svg?style=flat)](https://badge.fury.io/js/spike-util) [![tests](http://img.shields.io/travis/static-dev/spike-util/master.svg?style=flat)](https://travis-ci.org/static-dev/spike-util) [![dependencies](http://img.shields.io/david/static-dev/spike-util.svg?style=flat)](https://david-dm.org/static-dev/spike-util) [![coverage](http://img.shields.io/coveralls/static-dev/spike-util.svg?style=flat)](https://coveralls.io/github/static-dev/spike-util)\n\nA grab bag of utilities for spike plugins\n\n> **Note:** This project is in early development, and versioning is a little different. [Read this](http://markup.im/#q4_cRZ1Q) for more details.\n\n### Why should you care?\n\n[Spike](http://github.com/static-dev/spike) uses webpack as its core compiler, but fundamentally behaves a bit differently from webpack, as it's a full static site compiler rather than a javascript bundler. As such, plugins for spike frequently need to make use of a couple specific utilities. In fact, each of these utilities are used in spike's core plugins.\n\nIf you are making a spike plugin, check out the documentation below, and one of these functions might be able to save you a bunch of code :grin:\n\n### Installation\n\n`npm install spike-util -S`\n\n### Usage\n\nAll of the utilities require access to spike/webpack's `options` in order to work correctly. As such, the plugins are bundled in a class that must be initialized with the config.\n\n```js\nconst SpikeUtils = require('spike-util')\n\n// webpack plugin apply function\napply (compiler) {\n  const util = new SpikeUtils(compiler.options)\n}\n```\n\nWith it initialized, you can use any of the following functions:\n\n- `util.addFilesAsWebpackEntries(compilation, files)` - adds one or more files to webpack's pipeline so that it is processed without having to be `require`'d in an entry.\n- `util.getSpikeOptions()` - returns spike-specific options that are not easily accessed on the primary webpack config object\n- `util.getOutputPath(path)` - given a relative or absolute path to a file in a spike project, return it's output path relative to the project root.\n- `util.removeAssets(compilation, files)` - removes assets from webpack's pipeline so that they are not written as entries.\n- `util.resolveRelativeSourcePath(path)` - resolves a relative output path from a spike project to an absolute path to the source file.\n- `util.isFileIgnored(file)` - given a path to a file in a spike project, returns a boolean for whether the file is ignored or not.\n- `util.runAll(compiler, cb)` - run the given function when webpack's compiler initializes, bound to both the `run` and `run-watch` events.\n- `util.pathsToRegex(paths)` - given an array of file paths, builds a regex that will match only those paths\n- `util.modifyOutputPath(file, outPath)` - Given an absolute or relative (to the project root) path to a file that's being processed by spike, changes the output path to absolute or relative (recommended) path provided. Recommended to use in the `emit` plugin stage.\n\nFor more details on any given function, check out the source! I would never say this for any other library, but this is only one simple file, with fairly small functions that are extremely thoroughly documented, so I think it's worth jumping in.\n\n### License & Contributing\n\n- Details on the license [can be found here](LICENSE.md)\n- Details on running tests and contributing [can be found here](contributing.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/static-dev/spike-utils.git"
  },
  "scripts": {
    "coverage": "nyc ava",
    "coveralls": "nyc --reporter=lcov ava && cat ./coverage/lcov.info | coveralls",
    "lint": "standard",
    "test": "ava"
  },
  "version": "1.1.0"
}
